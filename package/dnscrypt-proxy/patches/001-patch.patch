diff -rupN dnscrypt-proxy-1.3.0-orig/src/libsodium/configure.ac dnscrypt-proxy-1.3.0-new/src/libsodium/configure.ac
--- dnscrypt-proxy-1.3.0-orig/src/libsodium/configure.ac    2013-04-22 23:20:37.000000000 +0300
+++ dnscrypt-proxy-1.3.0-new/src/libsodium/configure.ac    2013-05-17 09:55:08.576406577 +0300
@@ -144,6 +144,21 @@ AS_IF([test -d /usr/local/lib], [
   LDFLAGS="$LDFLAGS -L/usr/local/lib"
 ])
 
+AC_MSG_CHECKING(for access to floating-point rounding mode)
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+  #include <fenv.h>
+  #pragma STDC FENV_ACCESS ON
+]], [[
+  const int previous_rounding_mode = fegetround();
+  fesetround(FE_TONEAREST);
+  fesetround(previous_rounding_mode);
+]])],
+[AC_MSG_RESULT(yes)
+ AC_DEFINE([HAVE_FENV_H], [1], [floating-point rounding mode is accessible])
+],
+[AC_MSG_RESULT(no)])
+
+
 dnl Checks for typedefs, structures, and compiler characteristics.
 
 AC_C_BIGENDIAN(
diff -rupN dnscrypt-proxy-1.3.0-orig/src/libsodium/src/libsodium/crypto_onetimeauth/poly1305/53/auth_poly1305_53.c dnscrypt-proxy-1.3.0-new/src/libsodium/src/libsodium/crypto_onetimeauth/poly1305/53/auth_poly1305_53.c
--- dnscrypt-proxy-1.3.0-orig/src/libsodium/src/libsodium/crypto_onetimeauth/poly1305/53/auth_poly1305_53.c    2013-04-22 20:54:56.000000000 +0300
+++ dnscrypt-proxy-1.3.0-new/src/libsodium/src/libsodium/crypto_onetimeauth/poly1305/53/auth_poly1305_53.c    2013-05-15 12:11:51.774641635 +0300
@@ -3,15 +3,18 @@
 D. J. Bernstein
 Public domain.
 */
-
+#ifdef HAVE_FENV_H
 #include <fenv.h>
+#endif
 #include <stdint.h>
 #include <stdlib.h>
 
 #include "api.h"
 #include "crypto_onetimeauth_poly1305_53.h"
 
+#ifdef HAVE_FENV_H
 #pragma STDC FENV_ACCESS ON
+#endif
 
 typedef uint8_t  uchar;
 typedef int32_t  int32;
@@ -237,12 +240,14 @@ int crypto_onetimeauth(unsigned char *ou
   register uint64 g3;
   register uint64 g4;
 
+#ifdef HAVE_FENV_H
   const int previous_rounding_mode = fegetround();
   if (previous_rounding_mode != FE_TONEAREST) {
       if (fesetround(FE_TONEAREST) != 0) {
           return -1;
       }
   }
+#endif
 
   r00 = *(uchar *) (r + 0);
   constants = (char *) &poly1305_53_constants;
@@ -1626,10 +1631,13 @@ nomorebytes:;
   f3 >>= 8;
   *(uchar *) (out + 15) = f3;
 
+#ifdef HAVE_FENV_H
   if (previous_rounding_mode != FE_TONEAREST &&
       fesetround(previous_rounding_mode) != 0) {
       abort();
   }
+#endif
+
   return 0;
 }
 
diff -rupN dnscrypt-proxy-1.3.0-orig/src/libsodium/src/libsodium/sodium/core.c dnscrypt-proxy-1.3.0-new/src/libsodium/src/libsodium/sodium/core.c
--- dnscrypt-proxy-1.3.0-orig/src/libsodium/src/libsodium/sodium/core.c    2013-04-22 22:48:21.000000000 +0300
+++ dnscrypt-proxy-1.3.0-new/src/libsodium/src/libsodium/sodium/core.c    2013-05-13 14:17:24.000000000 +0300
@@ -13,8 +13,10 @@ sodium_init(void)
         return 1;
     }
     initialized = 1;
+#ifdef HAVE_FENV_H
     if (crypto_onetimeauth_pick_best_implementation() == NULL) {
         return -1;
     }
+#endif
     return 0;
 }